@using Quintessence.QCandidate.Core.Domain
@model Quintessence.QCandidate.Models.Assessments.ProgramComponent


<li class="program-component" data-date="@Model.Start.ToString("HH:mm") - @Model.End.ToString("HH:mm")">
    <h3>@Html.DisplayFor(m => Model.Title)</h3>
    <p>
        @Html.DisplayFor(m => Model.Location)
    @{
        if (!string.IsNullOrEmpty(Model.Assessors))
        {
            @Html.Raw("- ") @Html.DisplayFor(m => Model.Assessors)
        }
    }


</p>
@switch (Model.QCandidateLayout.Name)
{
    case nameof(QCandidateLayout.Pdf) : <a href="@Url.Action(nameof(Quintessence.QCandidate.Controllers.PdfProgramComponentsController.Details), "PdfProgramComponents", new { id = Model.Id })">PDF Documentation</a>
        break;
    case nameof(QCandidateLayout.Memo): <a href="@Url.Action(nameof(Quintessence.QCandidate.Controllers.MemoProgramComponentsController.Details), "MemoProgramComponents", new { id = Model.Id })">Memo Documentation</a>
        break;
    case nameof(QCandidateLayout.Show): <p>Placeholder text when QCandidateLayout = Show</p>
        break;

}


</ li >



