@using Microsoft.AspNetCore.Mvc.Localization
@using Quintessence.QCandidate.Core.Domain
@inject IViewLocalizer Localizer
@model Quintessence.QCandidate.Models.Assessments.ProgramComponent

<li class="program-component" data-date="@Model.Start.ToString("HH:mm") - @Model.End.ToString("HH:mm")">
    <h3>@Html.DisplayFor(m => Model.Title)</h3>
    <p>
        @Html.DisplayFor(m => Model.Location)
        @{
            if (!string.IsNullOrEmpty(Model.Assessors))
            {
                @Html.Raw("- ") @Html.DisplayFor(m => Model.Assessors)
            }

            if (Model.Title == "Evaluation Form")
            {
                if (TempData["Location"].ToString() == "Online")
                {
                    @Localizer["OnlineEvaluation"]
                }
                else
                {
                    @Localizer["OfficeEvaluation"]
                }
            }

            if (Model.Title.Contains("Self reflection"))
            {
                @Html.Raw(String.Format(Localizer["SelfReflection"].Value, Model.Id))
            }

        }
    </p>

    @if (Model.ShowDetailsLink)
    {
        if (Model.QCandidateLayout == QCandidateLayout.Pdf)
        {
            @Html.ActionLink(Localizer.GetString("PdfDocument"), nameof(Quintessence.QCandidate.Controllers.PdfProgramComponentsController.Details), "PdfProgramComponents", new { Id = Model.Id })
        }
        if (Model.QCandidateLayout == QCandidateLayout.Memo)
        {
            @Html.ActionLink(Localizer.GetString("Memo"), nameof(Quintessence.QCandidate.Controllers.MemoProgramComponentsController.Details), "MemoProgramComponents", new { id = Model.Id })
        }
        if (Model.Title.Contains("Debriefing"))
        {
            @Html.ActionLink(Localizer.GetString("PdfDocument"), nameof(Quintessence.QCandidate.Controllers.NeoProgramComponentsController.Details), "NeoProgramComponents", new { id = Model.Id })
        }
        if (Model.Title.Contains("Intro") && TempData["Location"].ToString() != "Online")
        {
            @Html.Raw(String.Format(Localizer["OrderForm"].Value, Model.Id))
        }
        if (Model.Description != null && Model.Description.StartsWith("http"))
        {
            <a href="@Model.Description" target="_blank">Start</a>
        }
    }
</li>