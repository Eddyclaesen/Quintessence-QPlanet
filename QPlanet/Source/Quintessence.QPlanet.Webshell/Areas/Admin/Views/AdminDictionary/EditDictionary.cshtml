@model Quintessence.QPlanet.ViewModel.Dim.EditDictionaryModel
@{
    Layout = "~/Views/Shared/_DetailLayout.cshtml";
    ViewBag.Title = "Admin - Edit Quintessence dictionary";
}
@section DetailAreaNavigation
{
    <nav class="area">
        <ul>
            <li class="current"><a href="javascript:void(0);">@Model.Name</a></li>
        </ul>
    </nav>
}
@section DetailActionNavigation
{
    <nav class="action">
        <ul>
            <li class="current">Detail</li>
        </ul>
    </nav>
}
@section AdditionalScripts
{
    <script src="@Url.Content("~/Scripts/jquery.dataTables.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.treeTable.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.cookie.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/persist.js")" type="text/javascript"></script>

    <script>
        $(function () {
            $('#DictionaryTable').treeTable({ persist: true });

            InitializeButtons();
            InitializeAddClusterDialog();
            
            if (@(Model.NumberOfUsages) != 0) {
                AddNotification('DICUSAGES', 'There are @(Model.NumberOfUsages) project(s) using this dictionary. Editing this dictionary may render those project corrupt!');
            }
        });
        
        function InitializeAddClusterDialog() {
            $('#AddDictionaryClusterDialog').dialog(
                {
                    autoOpen: false,
                    modal: true, 
                    resizable: false,
                    width: 650,
                    height: 500,
                    title: 'Add new cluster'
                });
        }

        function InitializeButtons() {
            $('a[data-function=SaveDictionary]').click(function (event) {
                ShowDetailSaveDialog();

                event.preventDefault();

                var form = $('form');

                $.ajax({
                    url: form.attr('action'),
                    type: 'POST',
                    data: form.serialize(),
                    dataType: 'JSON',
                    success: function () {
                        window.location.reload();
                    },
                    error: function (err) {
                        HideDetailSaveDialog();
                        ShowDetailErrorDialog('Save dictionary', err);
                    }
                });
            });

            $(this).on('click', 'a[data-function=DeleteDictionaryClusterButton]', null, function(event) {
                event.preventDefault();

                if (!confirm('Are you sure you want to delete this cluster?'))
                    return;
                
                ShowDetailSaveDialog();

                $.ajax({
                    url: '@Url.Action("DeleteDictionaryCluster")/' + $(this).attr('data-id'),
                    success: function() {
                        window.location.reload();
                    },
                    error: function(err) {
                        HideDetailSaveDialog();
                        ShowDetailErrorDialog('Delete dictionary cluster', err);
                    }
                });
            });

                $(this).on('click', 'a[data-function=AddDictionaryClusterButton]', null, function(event) {
                    event.preventDefault();

                    $('#AddDictionaryClusterDialog').loading('Prepare new cluster.');
                    $('#AddDictionaryClusterDialog').dialog('open');

                    $.ajax({
                        url: '@Url.Action("AddDictionaryCluster", new { id = Model.Id })',
                    success: function(html) {
                        $('#AddDictionaryClusterDialog').html(html);
                    },
                    error: function(err) {
                        ShowDetailErrorDialog('Prepare new cluster', err);
                    }
                });
            });

            $(this).on('click', 'a[data-function=SaveDictionaryCluster]', null, function(event) {
                ShowDetailSaveDialog();

                event.preventDefault();

                var form = $('#AddDictionaryClusterForm');

                $.ajax({
                    url: form.attr('action'),
                    type: 'POST',
                    data: form.serialize(),
                    dataType: 'JSON',
                    success: function() {
                        window.location.reload();
                    },
                    error: function(err) {
                        HideDetailSaveDialog();
                        ShowDetailErrorDialog('Create dictionary cluster', err);
                    }
                });
            });

            $(this).on('click', 'a[data-function=NormalizeOrderButton]', null, function(event) {
                ShowDetailSaveDialog();

                event.preventDefault();

                $.ajax({
                    url: '@Url.Action("NormalizeDictionaryClusterOrder", new { id = Model.Id })',
                    success: function() {
                        window.location.reload();
                    },
                    error: function(err) {
                        HideDetailSaveDialog();
                        ShowDetailErrorDialog('Normalize dictionary clusters', err);
                    }
                });
            });
        }
    </script>
}

<div class="grid_8">
    <fieldset>
        <legend>@Model.Name - @Model.ContactFullName</legend>

        @using (Html.BeginForm())
        {
            @Html.EditorFor(m => m, "BaseEntityViewTemplate")
            <div class="row">
                <div>@Html.DisplayNameFor(m => m.Name)</div>
                <div>@Html.EditorFor(m => m.Name)</div>
            </div>
            if (Model.NumberOfUsages == 0)
            {
            <div class="row">
                <div>@Html.DisplayNameFor(m => m.IsLive)</div>
                <div>@Html.EditorFor(m => m.IsLive)</div>
            </div> 
            }
            else
            {
                Model.IsLive = true;
            @Html.HiddenFor(m => m.IsLive)
            }
            <div class="row">
                <div>@Html.DisplayNameFor(m => m.Description)</div>
                <div>@Html.TextAreaFor(m => m.Description, 4, 40, null)</div>
            </div>
            if (!string.IsNullOrWhiteSpace(Model.ContactFullName))
            {
            <div class="row">
                <div>@Html.DisplayNameFor(m => m.ContactFullName)</div>
                <div>@Model.ContactFullName</div>
            </div>   
            }
            <div class="row">
                <div>@Html.DisplayNameFor(m => m.NumberOfUsages)</div>
                <div>@Html.DisplayFor(m => m.NumberOfUsages)</div>
            </div>
            <br />
            <br />
    
            <div class="right-text">
                <a href="javascript:void();" data-function="SaveDictionary" class="button">Save</a>
            </div>
        }
    </fieldset>
</div>
<div class="grid_8">
    <fieldset>
        <legend>Clusters</legend>
        <table id="DictionaryClusterTable" class="dataTable">
            <thead>
                <tr>
                    <th style="width: 16px;"></th>
                    <th style="width: 100%;">Cluster</th>
                    <th style="width: 72px;">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var cluster in Model.DictionaryClusters.OrderBy(dc => dc.Order).ThenBy(dc => dc.Name))
                {
                    <tr id="node-@cluster.Id">
                        <td>
                            @if (!string.IsNullOrWhiteSpace(cluster.Color))
                            {
                                <div style="background-color: @cluster.Color; width: 16px; height: 16px; float: right; text-align: center">&nbsp;
                                </div>
                            }</td>
                        <td>@cluster.Order - @cluster.Name
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "EditDictionaryCluster", new { id = cluster.Id }, new { @class = "edit-link", target = cluster.DictionaryId })
                            @if (Model.NumberOfUsages == 0 && !Model.IsLive)
                            {
                                <a href="javascript:void(0);" data-function="DeleteDictionaryClusterButton" data-id="@cluster.Id" class="delete-link">
                                    Delete</a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <br />
        <br />

        <div class="right-text">
            <a href="javascript:void();" data-function="AddDictionaryClusterButton" class="button">
                Add</a>
            <a href="javascript:void();" data-function="NormalizeOrderButton" class="button">Normalize
                Order</a>
        </div>
    </fieldset>
</div>

<div id="AddDictionaryClusterDialog"></div>
