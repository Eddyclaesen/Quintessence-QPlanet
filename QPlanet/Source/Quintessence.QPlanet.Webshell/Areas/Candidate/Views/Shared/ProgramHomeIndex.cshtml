@model Quintessence.QService.QueryModel.Inf.OfficeView
@{
    Layout = "~/Views/Shared/_FullLayout.cshtml";
    ViewBag.Title = "Candidates - Program - " + Model.FullName;

    var showProgramForToday = DateTime.Now.Hour < 12;
    var date = (showProgramForToday ? DateTime.Now : DateTime.Now.AddDays(1));
    var today = DateTime.Now;
    
}

<div style="display: none" id="CurrentDay">@date.Day</div>
<div style="display: none" id="CurrentMonth">@date.Month</div>
<div style="display: none" id="CurrentYear">@date.Year</div>

@section AdditionalScripts
{
    <script src="@Url.Content("~/Scripts/jquery.dataTables.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.treeTable.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.cookie.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/Persist.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/fullcalendar.js")" type="text/javascript"></script>

    <script type="text/javascript">
        $(function () {
            var year = $('#CurrentYear').text();
            var month = $('#CurrentMonth').text();
            var day = $('#CurrentDay').text();
            RefreshProgram(year, month, day);

            InitializePrintDialog();
            InitializeValidationDialog();
            InitializeShowEditDayProgramDialog();
            InitializeUnplannedEventsDialog();
            InitializeButtons();

            CheckForUnplannedEvents();
        });

        function RefreshProgram(year, month, day) {
            RefreshDisplay(year, month, day);

            $.ajax({
                url: '@Url.Action("DayProgram", "ProgramHome", new { officeId = Model.Id, year = date.Year, month = date.Month, day = date.Day })',
                success: function (html) {
                    $('#ProgramPlaceholder').html(html);
                    HandleCalendars();
                },
                error: function (err) {
                    alert(err.statusText);
                }
            });
        }

        function HandleCalendars() {
            $('div[data-function=Calendar]').each(function () {
                var roomId = $(this).attr('id');
                var year = $(this).attr('data-year');
                var month = $(this).attr('data-month');
                var day = $(this).attr('data-day');

                var url = '@Url.Action("AssessmentRoomProgram", "ProgramHome")/' + roomId + '/' + year + '/' + month + '/' + day;

                var calendar = $(this);

                calendar.fullCalendar({
                    header: false,
                    weekends: false,
                    editable: false,
                    defaultView: 'agendaDay',
                    firstHour: 8,
                    minTime: 0,
                    maxTime: 24,
                    allDaySlot: false,
                    height: 750,
                    slotMinutes: 5,
                    eventSources: [{ url: url }],
                    agenda: 'h:mm{ - h:mm}',
                    axisFormat: 'HH:mm',
                    timeFormat: {
                        agenda: 'HH:mm{ - HH:mm}'
                    },
                    columnFormat: 'd/MM',
                    eventRender: function (event, element) {
                        element.find('div.fc-event-title').html(element.find('div.fc-event-title').text());
                    },
                    eventAfterRender: function (event, element, view) {
                        $('div[data-function=AssessorBackground][data-processed=false]').each(function () {
                            var backgroundColor = $('div[data-function=AssessorColor][data-assessor-id=' + $(this).attr('data-assessor-id') + ']').attr('data-color');
                            $(this).attr('style', 'background-color: ' + backgroundColor);
                            $(this).attr('data-processed', 'true');
                        });
                    }
                });

                calendar.fullCalendar('gotoDate', parseInt($('#CurrentYear').text()), parseInt($('#CurrentMonth').text()) - 1, parseInt($('#CurrentDay').text()));

                $('div[data-function=Calendar] > div > div > div > div').scroll(function () {
                    $('div[data-function=Calendar] > div > div > div > div').scrollTop($(this).scrollTop());
                });
            });
        }

        function InitializePrintDialog() {
            $('#PrintDialog').dialog(
                {
                    autoOpen: false,
                    modal: true,
                    resizable: false,
                    width: 500,
                    height: 400,
                    title: 'Print a program'
                });
        }

        function InitializeValidationDialog() {
            $('#ValidationDialog').dialog(
                {
                    autoOpen: false,
                    modal: false,
                    resizable: false,
                    width: 350,
                    height: 200,
                    title: 'Please wait',
                    closeOnEscape: false,
                    open: function (event, ui) {
                        $(this).loading('Checking for unplanned events...<br />This might take a few seconds.');
                        $(".ui-dialog-titlebar-close", ui.dialog || ui).hide();
                    }
                });
        }

        function InitializeShowEditDayProgramDialog() {
            $('#EditDayProgramDialog').dialog(
                {
                    autoOpen: false,
                    modal: true,
                    resizable: false,
                    width: 500,
                    height: 225,
                    title: 'Select a date'
                });
            $('#EditDayProgramDate').datetimepicker({ dateFormat: "dd/mm/yy", showTimepicker: false });
        }

        function InitializeUnplannedEventsDialog() {
            $('#UnplannedEventsDialog').dialog(
                {
                    autoOpen: false,
                    modal: true,
                    resizable: false,
                    width: 600,
                    height: 600,
                    title: 'Unplanned events'
                });
        }

        function InitializeButtons() {
            $(this).on('click', 'a[data-function=ShowEditDayProgramDialog]', null, function () {
                var year = $('#CurrentYear').text();
                var month = $('#CurrentMonth').text();
                var day = $('#CurrentDay').text();
                ShowEditDayProgramDialog(year, month, day);
            });

            $(this).on('click', 'a[data-function=RefreshDayProgramButton]', null, function () {
                $('div[data-function=Calendar]').each(function () {
                    $(this).fullCalendar('refetchEvents');
                });
                CheckForUnplannedEvents();
            });

            $(this).on('click', 'a[data-function=PrintDayProgramButton]', null, function () {
                $('#PrintDialog').loading('Retrieving candidates...');
                $('#PrintDialog').dialog('open');
                $.ajax({
                    url: '@Url.Action("Candidates", "ProgramHome", new { officeId = Model.Id, year = date.Year, month = date.Month, day = date.Day })',
                    success: function (html) {
                        $('#PrintDialog').html(html);
                    },
                    error: function (err) {
                        ShowDetailErrorDialog('Retrieve candidates', err);
                    }
                });
            });

            $('a[data-function=EditDayProgram]').click(function () {
                $('#EditDayProgramDialog').dialog('close');

                var date = $('#EditDayProgramDate').datetimepicker('getDate');

                var url = '@Url.Action("Edit", "ProgramDetail")/@Model.Id/' + date.getFullYear() + '/' + (date.getMonth() + 1) + '/' + date.getDate();

                $(this).attr('href', url);
                $(this).attr('target', 'dayprogram' + date.getFullYear() + (date.getMonth() + 1) + date.getDate());
            });
        }

        function ShowEditDayProgramDialog(year, month, day) {
            $('#EditDayProgramDate').datetimepicker('setDate', new Date(year, month, day, 0, 0));
            $('#EditDayProgramDialog').dialog('open');
        }

        function CheckForUnplannedEvents() {
            $('#ValidationDialog').dialog('open');
            $.ajax({
                url: '@Url.Action("CheckForUnplannedEvents", "ProgramHome", new { officeId = Model.Id, year = date.Year, month = date.Month, day = date.Day })',
                success: function (html) {
                    $('#ValidationDialog').dialog('close');
                    if (html != '') {
                        $('#UnplannedEventsDialog').html(html);
                        $('#UnplannedEventsTable').treeTable({ persist: true });
                        $('#UnplannedEventsDialog').dialog('open');
                    }
                    else {
                        $('#UnplannedEventsDialog').dialog('close');
                    }
                },
                error: function (err) {
                    $('#ValidationDialog').dialog('close');
                    alert(err.statusText);
                }
            });
        }
    </script>

    @if (showProgramForToday)
    {
        <script>
            function RefreshDisplay(year, month, day) {
                $('#ProgramPlaceholder').loading('Retrieving program for today...');
                $('#ProgramDate').text(day + '/' + month + '/' + year);
            }
        </script>
    }
    else
    {
        <script>
            function RefreshDisplay(year, month, day) {
                $('#ProgramPlaceholder').loading('Retrieving next program...<br />@Html.ActionLink("Click here", "Edit", "ProgramDetail", new { officeId = Model.Id, year = today.Year, month = today.Month, day = today.Day }, new { target = string.Format("dayprogram{0}{1}{2}", today.Year, today.Month, today.Day) }) for today.');
                $('#ProgramDate').text(day + '/' + month + '/' + year);
            }
        </script>
    }
}
<fieldset style="margin-top:80px;">
    <legend>Program <span id="ProgramDate"></span></legend>

    <div id="ProgramPlaceholder"></div>
</fieldset>

<div id="EditDayProgramDialog">
    <p>
        Select a date for which you want to create/update the program.
    </p>

    <div class="row">
        <div>Date</div>
        <div>
            <input type="text" id="EditDayProgramDate" />
        </div>
    </div>
    <br />
    <br />
    <br />

    <div class="right-text">
        <a href="javascript:void(0);" data-function="EditDayProgram" class="button">Edit</a>
    </div>

    <a id="EditProgramLink" style="display: none" />
</div>

<div id="UnplannedEventsDialog">
    <table class="dataTable">
        <thead>
            <tr>
                <th>Messages</th>
            </tr>
        </thead>
        <tbody id="UnplannedEvents"></tbody>
    </table>
</div>

<div id="ValidationDialog">
</div>

<div id="PrintDialog"></div>
