@using Quintessence.QPlanet.Infrastructure.Nullable
@using Quintessence.QPlanet.ViewModel.Prm
@using Quintessence.QPlanet.ViewModel.Prm.ProjectCategoryDetail.Interfaces
@using Quintessence.QService.QueryModel.Base
@using Quintessence.QService.QueryModel.Prm
@model EditProjectCandidateDetailModel

@using (Html.BeginForm("EditProjectCandidate", "ProjectAssessmentDevelopment", FormMethod.Post, new { id = "ProjectCandidateDetailsForm", data_id = Model.Id, data_name = Model.FullName }))
{
    @Html.EditorFor(m => m, "BaseEntityViewTemplate")
    <table data-function="CandidateTable">

        <tr id="node-details-@Model.Id" class="expanded">
            <td colspan="3">Details</td>
        </tr>
        <tr id="node-details-@Model.Id-detail" class="child-of-node-details-@Model.Id">
            <td colspan="3">
                <div class="row">
                    <div>
                        @Html.DisplayNameFor(m => m.ProjectCandidateDetailAssessmentStartDate):
                </div>
                <div>
                    @{
                        var diff = Model.ProjectCandidateDetailAssessmentEndDate.Subtract(Model.ProjectCandidateDetailAssessmentStartDate);
                        var linkText = diff.Days >= 1
                                           ? string.Format("{0} - {1}", Model.ProjectCandidateDetailAssessmentStartDate.ToString("dd/MM/yyyy HH:mm"), Model.ProjectCandidateDetailAssessmentEndDate.ToString("dd/MM/yyyy HH:mm"))
                                           : Model.ProjectCandidateDetailAssessmentStartDate.ToString("dd/MM/yyyy HH:mm");
                        var candidate = Model;
                    }
                    @if (candidate.AssessmentRoomId.HasValue)
                    {
                        var routeValues = new
                        {
                            area = "Candidate",
                            officeId = Model.RetrieveOfficeId(candidate.AssessmentRoomId.Value),
                            year = candidate.ProjectCandidateDetailAssessmentStartDate.Year,
                            month = candidate.ProjectCandidateDetailAssessmentStartDate.Month,
                            day = candidate.ProjectCandidateDetailAssessmentStartDate.Day
                        };
                        @Html.ActionLink(linkText, "Edit", "ProgramDetail", routeValues, new { target = string.Format("dayprogram{0}", candidate.ProjectCandidateDetailAssessmentStartDate.ToString("yyyyMMdd")) })
                    }
                    else
                    {
                        var routeValues = new
                        {
                            area = "Candidate",
                            officeId = 1,
                            year = candidate.ProjectCandidateDetailAssessmentStartDate.Year,
                            month = candidate.ProjectCandidateDetailAssessmentStartDate.Month,
                            day = candidate.ProjectCandidateDetailAssessmentStartDate.Day
                        };
                        @Html.ActionLink(linkText, "Edit", "ProgramDetail", routeValues, new { target = string.Format("dayprogram{0}", candidate.ProjectCandidateDetailAssessmentStartDate.ToString("yyyyMMdd")) })
                    }
                </div>
            </div>
            <div class="row">
                <div>
                    @Html.HiddenFor(m => m.IsCancelled)
                    @Html.HiddenFor(m => m.CandidateId)
                    @Html.HiddenFor(m => m.Code)
                    @Html.HiddenFor(m => m.ProjectCandidateDetailAssessmentStartDate)
                    @Html.DisplayNameFor(m => m.ProjectCandidateDetailLeadAssessorFirstName):
                </div>
                <div>
                    @(string.Format("{0} {1}", Model.ProjectCandidateDetailLeadAssessorFirstName, Model.ProjectCandidateDetailLeadAssessorLastName))
                </div>
            </div>
            <div class="row">
                <div>
                    @Html.DisplayNameFor(m => Model.ProjectCandidateDetailCoAssessors):
                </div>
                <div>
                    @string.Join(", ", Model.ProjectCandidateDetailCoAssessors.Select(ca => string.Format("{0} {1}", ca.AssessorFirstName, ca.AssessorLastName)))
            </div>
            </div>
            <div class="row">
                <div>@Html.DisplayNameFor(m => m.IsAccompaniedByCustomer):</div>
                <div>@Html.CheckBoxFor(m => m.IsAccompaniedByCustomer)</div>
            </div>
            <div class="row">
                <div>@Html.DisplayNameFor(m => m.InternalCandidate):</div>
                <div>@Html.CheckBoxFor(m => m.InternalCandidate)</div>
            </div>
            <div class="row">
                <div>@Html.DisplayNameFor(m => m.OnlineAssessment):</div>
                <div>@Html.CheckBoxFor(m => m.OnlineAssessment)</div>
            </div>
            <div class="row">
                <div>@Html.DisplayNameFor(m => m.Consent):</div>
                <div>@Html.CheckBoxFor(m => m.Consent, new { @disabled = "disabled" })</div>
            </div>
            <!--@if (Model.MainProjectCategoryDetail is ISimulationSelectionModel)
{
    <div class="row">
        <div>Scores:</div>
        <div>@Html.ActionLink("Scores", "EditProjectCandidateSimulationScores", new { id = @Model.Id }, new { target = @Model.Id })
        </div>
    </div>
}-->

            <div class="row">
                <div>Scores:</div>
                <div>
                    @if (Model.Project.Confidential == false)
                    {
                        @Html.ActionLink("Scores", "EditProjectCandidateSimulationScores", new { id = @Model.Id }, new { target = @Model.Id })
                    }
                    else
                    {
                        if (Model.Project.ProjectManagerId.ToString() == Session["UserId"].ToString())
                        {
                            @Html.ActionLink("Scores", "EditProjectCandidateSimulationScores", new { id = @Model.Id }, new { target = @Model.Id })
                        }
                        else
                        {
                            <span style="color:darksalmon;">Confidential</span>
                        }
                    }

                </div>
            </div>

            <div class="row">
                <div>Candidate file:</div>
                <div>
                    @Html.ActionLink("Generate", "GenerateCandidateMap", new { id = @Model.CandidateId, projectid = @Model.ProjectId })
                </div>
            </div>

            <div class="row">
                <div>@Html.DisplayNameFor(m => m.CandidateLanguageId):</div>
                <div>
                    @Html.DropDownListFor(m => m.CandidateLanguageId, Model.CreateLanguageSelectListItems(Model.CandidateLanguageId))
                </div>
            </div>
            <div class="row">
                <div>@Html.DisplayNameFor(m => m.CandidateGender):</div>
                <div>
                    @Html.DropDownListFor(m => m.CandidateGender, Model.CreateGenderSelectListItems(Model.CandidateGender))
                </div>
            </div>
            <div class="row">
                <div>@Html.DisplayNameFor(m => m.CandidateEmail):</div>
                <div>
                    @Html.TextBoxFor(m => m.CandidateEmail)
                    <a href="javascript:void(0);" data-function="SendCandidateInvitationMailButton" data-id="@Model.Id" data-language-id="@Model.CandidateLanguageId">
                        Invite
                    </a>
                </div>
            </div>
            <div class="row">
                <div>@Html.DisplayNameFor(m => m.CandidatePhone):</div>
                <div>@Html.TextBoxFor(m => m.CandidatePhone)</div>
            </div>
            <div class="row">
                <div>Report remarks:</div>
                <div style="color: red;">
                    @if (string.IsNullOrEmpty(Model.Project.SendReportToParticipantRemarks))
                    {
                        @:None
                    }
                    else
                    {
                        @Html.Raw(Model.Project.SendReportToParticipantRemarks)
                    }
                </div>
            </div>
            @if (Model.Project.PricingModelType == PricingModelType.FixedPrice)
            {
                <div class="row">
                    <div>@Html.DisplayNameFor(m => m.InvoiceAmount):</div>
                    <div>
                        @if (Model.InvoiceStatusCode == (int)InvoiceStatusType.Planned)
                        {
                            @Html.TextBoxFor(m => m.InvoiceAmount, new { data_id = "CandidateInvoiceAmount" })
                        }
                        else
                        {
                            var statusCode = EnumMemberNameAttribute.GetName(Enum.GetValues(typeof(InvoiceStatusType)).OfType<InvoiceStatusType>().FirstOrDefault(invoiceStatusType => (int)invoiceStatusType == Model.InvoiceStatusCode));
                            @(string.Format("{0} ({1})", Model.InvoiceAmount.ToString("C"), statusCode))
                        }
                    </div>
                </div>
            }

            </td>
        </tr>
        <tr id="node-culturalfit-@Model.Id">
            <td colspan="3">Cultural fit</td>
        </tr>
        <tr id="node-culturalfit-@Model.Id-detail" class="child-of-node-culturalfit-@Model.Id">
            <td colspan="3">
                <div>
                    <br />
                    <table class="dataTable">
                        <thead>
                            <tr>
                                <th>Project</th>
                                <th>Status</th>
                                <th>Request date</th>
                                <th>AC Deadline</th>
                                <th>Code</th>
                                <th>Type</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>

                            @if (Model.TheoremListRequests.Any())
                            {
                                foreach (var request in Model.TheoremListRequests)
                                {
                                <tr>
                                    <td>
                                        <a href="@Url.Action("Edit", "ProjectAssessmentDevelopment", new { id = request.ProjectId })" target="@request.ProjectId">@request.ProjectName</a>
                                    </td>
                                    @{
                                    var status = "Not completed";
                                    switch (request.Status)
                                    {
                                        case 2:
                                            status = "In progress";
                                            break;
                                        case 99:
                                            status = "Completed";
                                            break;
                                    }
                                    }
                                    <td title="@status">@request.Status</td>
                                    <td>@request.RequestDate.ToShortDateString()</td>
                                    <td>@Model.ProjectCandidateDetailAssessmentStartDate.ToShortDateString()
                                    </td>
                                    <td>@request.VerificationCode</td>
                                    <td>@request.TheoremListRequestType</td>
                                    <td>
                                        @Html.ActionLink("Nl", "GenerateCulturalFitReport", "ProjectAssessmentDevelopment", new { id = request.Id, languageId = 1 }, null)
                                        @Html.ActionLink("Fr", "GenerateCulturalFitReport", "ProjectAssessmentDevelopment", new { id = request.Id, languageId = 2 }, null)
                                        @Html.ActionLink("En", "GenerateCulturalFitReport", "ProjectAssessmentDevelopment", new { id = request.Id, languageId = 3 }, null)
                                    </td>
                                </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="5" class="center-text">...No requests for @Model.FullName...
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <br />
                </div>
                <br />
                <div class="right-text">
                    <a href="javascript:void(0);" data-function="CreateCulturalFitCandidateRequestButton" data-project-candidate-id="@Model.Id" class="button">
                        Create</a>
                </div>
            </td>
        </tr>
        <tr id="node-reporting-@Model.Id">
            <td colspan="3">Reporting</td>
        </tr>
        <tr id="node-reporting-@Model.Id-detail" class="child-of-node-reporting-@Model.Id">
            <td colspan="3">
                <div class="row">
                    <div>@Html.DisplayNameFor(m => m.ReportDeadline):</div>
                    <div>
                        @Html.EditorFor(m => m.ReportDeadline)
                        @Html.ValidationMessageFor(m => m.ReportDeadline)
                    </div>
                </div>
                <div class="row">
                    <div>@Html.DisplayNameFor(m => m.ReportStatusId):</div>
                    <div>
                        @Html.DropDownListFor(m => m.ReportStatusId, Model.CreateReportStatusSelectListItems(Model.ReportStatusId))
                    </div>
                </div>
                <div class="row">
                    <div>@Html.DisplayNameFor(m => m.ReportLanguageId):</div>
                    <div>
                        @Html.DropDownListFor(m => m.ReportLanguageId, Model.CreateLanguageSelectListItems(Model.ReportLanguageId))
                    </div>
                </div>
                <div class="row">
                    <div>@Html.DisplayNameFor(m => m.ReportReviewerId):</div>
                    <div>
                        @Html.DropDownListFor(m => m.ReportReviewerId, Model.CreateCustomerAssistantSelectListItems(Model.ReportReviewerId))
                    </div>
                </div>
                <div class="row">
                    <div>Is revision by PM required:</div>
                    <div>
                        @Html.CheckBoxFor(m => m.Project.IsRevisionByPmRequired, new { disabled = "disabled" })
                    </div>
                </div>
                <div class="row">
                    <div>Report remarks:</div>
                    <div>
                        @if (string.IsNullOrEmpty(Model.Project.ReportRemarks))
                        {
                            @:None
                        }
                        else
                        {
                            @Html.Raw(Model.Project.ReportRemarks)
                        }
                    </div>
                </div>
                <div class="row">
                    <div>SendReportToParticipantRemarks:</div>
                    <div>
                        @if (string.IsNullOrEmpty(Model.Project.SendReportToParticipantRemarks))
                        {
                            @:None
                        }
                        else
                        {
                            @Html.Raw(Model.Project.SendReportToParticipantRemarks)
                        }
                    </div>
                </div>
                <div class="row">
                    <div>Report recipient(s):</div>
                    <div>
                        <div data-id="ProjectCandidateReportRecipientsPlaceholder" data-project-candidate-id="@Model.Id">
                        </div>
                        <div class="right-text">
                            <a href="javascript:void(0);" data-function="AddProjectCandidateReportRecipientsButton" data-contact-id="@Model.Project.ContactId" data-project-candidate-id="@Model.Id" class="button">
                                Add</a>
                        </div>
                    </div>
                </div>
            </td>
        </tr>

        @if (Model.ProjectCandidateCategoryDetailTypes.Count > 0)
        {
            <tr id="node-Categories-@Model.Id">
                <td class="3">Categories @if (@Model.ProjectCandidateCategoryDetailTypes.Where(p => p.SurveyPlanningId == 2).Count() > 0)
                    {
                        <span style="color:orange" ;>(@Model.ProjectCandidateCategoryDetailTypes.Where(p => p.SurveyPlanningId == 2).Count() Before)</span>
                    }
                </td>
            </tr>
            for (int j = 0; j < Model.ProjectCandidateCategoryDetailTypes.Count; j++)
            {
            <tr id="node-@Model.Id-@Model.ProjectCandidateCategoryDetailTypes[j].ProjectCategoryDetailTypeId" class="child-of-node-Categories-@Model.ProjectCandidateCategoryDetailTypes[j].ProjectCandidateId">
                <td>
                    @Model.ProjectCandidateCategoryDetailTypes[j].ProjectCategoryDetailTypeName
                    @Html.HiddenFor(m => m.ProjectCandidateCategoryDetailTypes[j].DetailType)
                    @Html.HiddenFor(m => m.ProjectCandidateCategoryDetailTypes[j].Id)
                    @Html.HiddenFor(m => m.ProjectCandidateCategoryDetailTypes[j].ProjectCategoryDetailTypeId)
                    @Html.HiddenFor(m => m.ProjectCandidateCategoryDetailTypes[j].ProjectCandidateId)
                    @Html.HiddenFor(m => m.ProjectCandidateCategoryDetailTypes[j].ProjectCategoryDetailTypeName)
                    @Html.HiddenFor(m => m.ProjectCandidateCategoryDetailTypes[j].SurveyPlanningId)
                </td>
            </tr>
            <tr class="child-of-node-@Model.Id-@Model.ProjectCandidateCategoryDetailTypes[j].ProjectCategoryDetailTypeId">
                <td colspan="3">
                    @if (Model.ProjectCandidateCategoryDetailTypes[j] is EditProjectCandidateCategoryDetailType1Model)
                    {
                        @Html.EditorFor(m => m.ProjectCandidateCategoryDetailTypes[j], "EditProjectCandidateCategoryDetailType1Model")
                    }
                    else if (Model.ProjectCandidateCategoryDetailTypes[j] is EditProjectCandidateCategoryDetailType2Model)
                    {
                        @Html.EditorFor(m => m.ProjectCandidateCategoryDetailTypes[j], "EditProjectCandidateCategoryDetailType2Model")
                    }
                    else if (Model.ProjectCandidateCategoryDetailTypes[j] is EditProjectCandidateCategoryDetailType3Model)
                    {
                        @Html.EditorFor(m => m.ProjectCandidateCategoryDetailTypes[j], "EditProjectCandidateCategoryDetailType3Model")
                    }
                    else
                    {
                        @Html.EditorFor(m => m.ProjectCandidateCategoryDetailTypes[j], "EditProjectCandidateCategoryDetailTypeModel")
                    }

                    <div class="row">
                        <div>
                            see <a href="@Url.Action("SubProjectCategoryDetails", "ProjectAssessmentDevelopment", new { id = Model.Project.Id.ToString() })#@Model.ProjectCandidateCategoryDetailTypes[j].ProjectCategoryDetailTypeId" target="_blank">
                                subcategories</a> for more information.
                        </div>
                    </div>
                </td>
            </tr>
            }
        }

        <tr id="node-Projects-@Model.Id">
            <td colspan="3">Sub projects</td>
        </tr>

        @if (Model.ProjectCandidateProjects.Any())
        {
            foreach (var project in Model.ProjectCandidateProjects)
            {
            <tr id="node-@Model.Id-@project.SubProjectId" class="child-of-node-Projects-@Model.Id">
                <td>@Html.ActionLink(project.ProjectName, "Edit", "ProjectGeneral", new { id = project.SubProjectId }, new { target = "_blank" })
                </td>
                <td colspan="2">@project.ProjectTypeName</td>
            </tr>
            }

        }
        else
        {
            <tr class="child-of-node-Projects-@Model.Id">
                <td colspan="3">No subprojects for this candidate... Press "Create" to create one.
                </td>
            </tr>
        }
        <tr class="child-of-node-Projects-@Model.Id">
            <td></td>
            <td colspan="2">
                @Html.ActionLink("Create", "Create", "ProjectGeneral", new { id = Model.ProjectId, projectCandidateId = Model.Id }, new { target = "_blank", @class = "button" })
            </td>
        </tr>

        <tr id="node-remarks-@Model.Id">
            <td colspan="3">Remarks</td>
        </tr>
        <tr class="child-of-node-remarks-@Model.Id">
            <td colspan="3">
                @Html.TextAreaFor(m => m.Remarks, new { style = "width:100%;", rows = 10, data_function = "CandidateRemarks" })
            </td>
        </tr>


    </table>

    <br />
    <br />
    <div style="text-align: right">
        <a href="javascript:void(0);" data-function="SubmitProjectCandidateDetailsButton"
            class="button">Save</a>
    </div>
}