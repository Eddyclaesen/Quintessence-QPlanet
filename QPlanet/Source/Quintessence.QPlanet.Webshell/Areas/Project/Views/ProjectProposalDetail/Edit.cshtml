@using Quintessence.QService.QueryModel.Prm
@model Quintessence.QPlanet.ViewModel.Prm.EditProposalModel
@{
    Layout = "~/Views/Shared/_DetailLayout.cshtml";
    ViewBag.Title = "Proposal - Create";
}
@section DetailAreaNavigation
{
    <nav class="area">
        <ul>
            <li class="current"><a href="javascript:void(0);">@Model.Name</a></li>
        </ul>
    </nav>
}
@section DetailActionNavigation
{
    <nav class="action">
        <ul>
            <li class="current">Detail</li>
        </ul>
    </nav>
}

@section AdditionalScripts
{
    <script src="@Url.Content("~/Scripts/tiny_mce/jquery.tinymce.js")" type="text/javascript"></script>

    <script>
        $(function () {
            InitializeContactNameAutocomplete();
            InitializeBusinessDeveloperNameAutocomplete();
            InitializeExecutorNameAutocomplete();

            InitializeChangeContactNameLink();
            InitializeChangeBusinessDeveloperNameLink();
            InitializeChangeExecutorNameLink();

            InitializeDatePickers();

            InitializeButtons();

            InitializeDropDownLists();

            InitializeTextAreas();
        });
        
        $(function () {
            // Replace the builtin US date validation with UK date validation
            $.validator.addMethod(
                "date",
                function (value, element) {
                    var bits = value.match(/([0-9]+)/gi), str;
                    if (!bits)
                        return this.optional(element) || false;
                    str = bits[1] + '/' + bits[0] + '/' + bits[2];
                    return this.optional(element) || !/Invalid|NaN/.test(new Date(str));
                },
                "Please enter a date in the format dd/mm/yyyy"
            );
        });

        function InitializeContactNameAutocomplete() {
            $("#@Html.IdFor(m => m.ContactFullName)").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '@Url.Action("SearchContact", "ProjectGeneral", new { area = "Project" })/' + request.term,
                        data: request,
                        dataType: "json",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    label: item.label,
                                    value: item.label,
                                    id: item.value
                                };
                            }));
                        },
                        error: function (err) {
                            ShowDetailErrorDialog('Search customer.', err);
                        }
                    });
                },
                select: function (event, ui) {
                    $('#@Html.IdFor(m => m.ContactId)').val(ui.item.id);
                    $('#@Html.IdFor(m => m.ContactFullName)').hide();
                    $('#ChangeContactNameLink').text(ui.item.label);
                    $('#ChangeContactNameLink').show();
                }
            });
        }

        function InitializeChangeContactNameLink() {
            var contactName = $('#@Html.IdFor(m => m.ContactFullName)').val();
            if ($('#@Html.IdFor(m => m.ContactId)').val() != '' && $('#@Html.IdFor(m => m.ContactId)').val() != '0') {
                $('#@Html.IdFor(m => m.ContactFullName)').hide();
                $('#ChangeContactNameLink').text(contactName);
                $('#ChangeContactNameLink').show();
            }

            $('#ChangeContactNameLink').click(function () {
                $('#@Html.IdFor(m => m.ContactId)').val(null);
                $('#@Html.IdFor(m => m.ContactFullName)').val(null);
                $('#ChangeContactNameLink').hide();
                $('#@Html.IdFor(m => m.ContactFullName)').show();
                $('#@Html.IdFor(m => m.ContactFullName)').focus();
            });
        }

        function InitializeBusinessDeveloperNameAutocomplete() {
            $("#@Html.IdFor(m => m.BusinessDeveloperFullName)").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '@Url.Action("SearchUser", "ProjectGeneral", new { area = "Project" })/' + request.term,
                        data: request,
                        dataType: "json",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    label: item.label,
                                    value: item.label,
                                    id: item.value
                                };
                            }));
                        }
                    });
                },
                select: function (event, ui) {
                    $('#@Html.IdFor(m => m.BusinessDeveloperId)').val(ui.item.id);
                    $('#@Html.IdFor(m => m.BusinessDeveloperFullName)').hide();
                    $('#ChangeBusinessDeveloperNameLink').text(ui.item.label);
                    $('#ChangeBusinessDeveloperNameLink').show();
                }
            });
        }

        function InitializeChangeBusinessDeveloperNameLink() {
            var businessDeveloperName = $('#@Html.IdFor(m => m.BusinessDeveloperFullName)').val();
            if ($('#@Html.IdFor(m => m.BusinessDeveloperId)').val() != '') {
                $('#@Html.IdFor(m => m.BusinessDeveloperFullName)').hide();
                $('#ChangeBusinessDeveloperNameLink').text(businessDeveloperName);
                $('#ChangeBusinessDeveloperNameLink').show();
            }

            $('#ChangeBusinessDeveloperNameLink').click(function () {
                $('#@Html.IdFor(m => m.BusinessDeveloperId)').val(null);
                $('#@Html.IdFor(m => m.BusinessDeveloperFullName)').val(null);
                $('#ChangeBusinessDeveloperNameLink').hide();
                $('#@Html.IdFor(m => m.BusinessDeveloperFullName)').show();
                $('#@Html.IdFor(m => m.BusinessDeveloperFullName)').focus();
            });
        }

        function InitializeExecutorNameAutocomplete() {
            $("#@Html.IdFor(m => m.ExecutorFullName)").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '@Url.Action("SearchUser", "ProjectGeneral", new { area = "Project" })/' + request.term,
                        data: request,
                        dataType: "json",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    label: item.label,
                                    value: item.label,
                                    id: item.value
                                };
                            }));
                        }
                    });
                },
                select: function (event, ui) {
                    $('#@Html.IdFor(m => m.ExecutorId)').val(ui.item.id);
                    $('#@Html.IdFor(m => m.ExecutorFullName)').hide();
                    $('#ChangeExecutorNameLink').text(ui.item.label);
                    $('#ChangeExecutorNameLink').show();
                }
            });
        }

        function InitializeChangeExecutorNameLink() {
            var executorName = $('#@Html.IdFor(m => m.ExecutorFullName)').val();
            if ($('#@Html.IdFor(m => m.ExecutorId)').val() != '') {
                $('#@Html.IdFor(m => m.ExecutorFullName)').hide();
                $('#ChangeExecutorNameLink').text(executorName);
                $('#ChangeExecutorNameLink').show();
            }

            $('#ChangeExecutorNameLink').click(function () {
                $('#@Html.IdFor(m => m.ExecutorId)').val(null);
                $('#@Html.IdFor(m => m.ExecutorFullName)').val(null);
                $('#ChangeExecutorNameLink').hide();
                $('#@Html.IdFor(m => m.ExecutorFullName)').show();
                $('#@Html.IdFor(m => m.ExecutorFullName)').focus();
            });
        }

        function InitializeDatePickers() {
            $('#@Html.IdFor(m => m.DateReceived)').datetimepicker({ dateFormat: "dd/mm/yy" , showTimepicker: false });
            $('#@Html.IdFor(m => m.Deadline)').datetimepicker({ dateFormat: "dd/mm/yy", timeFormat: "hh:mm" });
            $('#@Html.IdFor(m => m.DateSent)').datetimepicker({ dateFormat: "dd/mm/yy", timeFormat: "hh:mm" });
            $('#@Html.IdFor(m => m.DateWon)').datetimepicker({ dateFormat: "dd/mm/yy", showTimepicker: false });
        }

        function InitializeDropDownLists() {
            $('#@Html.IdFor(m => m.StatusCode)').change(function () {
                $('#SaveProposalButton').click();
            });
        }

        function InitializeButtons() {
            $('#SaveProposalButton').click(function () {
                $('#TypeOfSubmit').val("1"); //1 = save proposal
                SubmitForm();
            });

            $('#CreateProjectByProposalButton').click(function () {
                $('#TypeOfSubmit').val("2"); //2 = redirect to page "create project" with proposal details
                SubmitForm();
            });
            
        }
        
        function SubmitForm() {

            var form = $('form');

            ShowDetailSaveDialog();

            form.submit();
        }

        function InitializeTextAreas() {
            $('textarea').each(function () {
                $(this).tinymce({
                    script_url: '@Url.Content("~/Scripts/tiny_mce/tiny_mce.js")',
                    height: '150',
                    width: '300',
                    theme: 'simple',
                    valid_styles: { '*': 'font-weight,text-decoration' }
                });
            });
        }
    </script>
}

<div class="grid_8">
    <fieldset>
        <legend>Proposal information</legend>

        @using (Html.BeginForm())
        {
            @Html.EditorFor(m => m, "BaseEntityViewTemplate")
            @Html.HiddenFor(m => m.TypeOfSubmit)
            <div class="row">
                <div class="width-30-percent">
                    @Html.LabelFor(m => m.Name)
                </div>
                <div>@Html.EditorFor(m => m.Name)</div>
            </div>
            <div class="row">
                <div>@Html.ValidationMessageFor(m => m.Name)</div>
            </div>

            <div class="row">
                <div class="width-30-percent">@Html.LabelFor(m => m.ContactFullName)</div>
                <div>@Html.HiddenFor(m => m.ContactId)
                    @Html.TextBoxFor(m => m.ContactFullName)
                    <a href="javascript:void(0);" id="ChangeContactNameLink" title="Click on this link to change the contact">
                    </a>
                </div>
            </div>
            
            <div class="row">
                <div>@Html.ValidationMessageFor(m => m.ContactFullName)</div>
            </div>
            <div class="row">
                <div class="width-30-percent">@Html.LabelFor(m => m.BusinessDeveloperFullName)</div>
                <div>@Html.HiddenFor(m => m.BusinessDeveloperId)
                    @Html.TextBoxFor(m => m.BusinessDeveloperFullName)
                    <a href="javascript:void(0);" id="ChangeBusinessDeveloperNameLink" title="Click on
                this link to change the Business Developer"></a>
                </div>
            </div>
            <div class="row">
                <div>@Html.ValidationMessageFor(m => m.BusinessDeveloperFullName)</div>
            </div>

            <div class="row">
                <div class="width-30-percent">@Html.LabelFor(m => m.ExecutorFullName)</div>
                <div>@Html.HiddenFor(m => m.ExecutorId)
                    @Html.TextBoxFor(m => m.ExecutorFullName)
                    <a href="javascript:void(0);" id="ChangeExecutorNameLink" title="Click on this link
                to change the Executor"></a>
                </div>
            </div>
            <div class="row">
                <div>@Html.ValidationMessageFor(m => m.ExecutorFullName)</div>
            </div>

            <div class="row">
                <div class="width-30-percent">@Html.LabelFor(m => m.Description)</div>
                <div>@Html.TextAreaFor(m => m.Description)</div>
            </div>

            <div class="row">
                <div class="width-30-percent">@Html.LabelFor(m => m.DateReceived)</div>
                <div>@Html.TextBox(Html.IdFor(m => m.DateReceived).ToString(), Model.DateReceived.HasValue ? Model.DateReceived.Value.ToShortDateString() : string.Empty)
                </div>
            </div>
            <div class="row">
                <div>@Html.ValidationMessageFor(m => m.DateReceived)</div>
            </div>

            <div class="row">
                <div class="width-30-percent">@Html.LabelFor(m => m.Deadline)</div>
                <div>@Html.TextBox(Html.IdFor(m => m.Deadline).ToString(), Model.Deadline.HasValue ? Model.Deadline.Value.ToString("dd/MM/yyyy HH:mm") : string.Empty)
                </div>
            </div>
            <div class="row">
                <div>@Html.ValidationMessageFor(m => m.Deadline)</div>
            </div>

            <div class="row">
                <div class="width-30-percent">@Html.LabelFor(m => m.DateSent)</div>
                <div>@Html.TextBox(Html.IdFor(m => m.DateSent).ToString(), Model.DateSent.HasValue ? Model.DateSent.Value.ToString("dd/MM/yyyy HH:mm") : string.Empty)
                </div>
            </div>
            <div class="row">
                <div>@Html.ValidationMessageFor(m => m.DateSent)</div>
            </div>

            <div class="row">
                <div class="width-30-percent">@Html.LabelFor(m => m.PriceEstimation)</div>
                <div>@Html.TextBox(Html.IdFor(m => m.PriceEstimation).ToString(), Model.PriceEstimation.GetValueOrDefault(0))
                </div>
            </div>
            <div class="row">
                <div>@Html.ValidationMessageFor(m => m.PriceEstimation)</div>
            </div>

            <div class="row">
                <div class="width-30-percent">@Html.LabelFor(m => m.Prognosis)</div>
                <div>
                    @Html.DropDownListFor(m => m.Prognosis, Model.CreatePrognosisList(Model.Prognosis.GetValueOrDefault()))
                </div>
            </div>
            <div class="row">
                <div>@Html.ValidationMessageFor(m => m.Prognosis)</div>
            </div>

            <div class="row">
                <div class="width-30-percent">@Html.LabelFor(m => m.StatusCode)</div>
                <div>
                    @Html.DropDownListFor(m => m.StatusCode, Model.CreateStatusCodeList(Model.StatusCode))
                </div>
            </div>
            <div class="row">
                <div>@Html.ValidationMessageFor(m => m.StatusCode)</div>
            </div>

            //if (Model.StatusCode == (int)ProposalStatusType.Won)
            // {
                 <div class="row">
                     <div class="width-30-percent">@Html.LabelFor(m => m.FinalBudget)</div>
                     <div>@Html.TextBox(Html.IdFor(m => m.FinalBudget).ToString(), Model.FinalBudget.GetValueOrDefault(0))</div>
                 </div>
                <div class="row">
                    <div class="width-30-percent">@Html.LabelFor(m => m.DateWon)</div>
                    <div>@Html.TextBox(Html.IdFor(m => m.DateWon).ToString(), Model.DateWon.HasValue ? Model.DateWon.Value.ToString("dd/MM/yyyy") : string.Empty)
                    </div>
                </div>
            // }
            
            <div class="row">
                <div>@Html.DisplayNameFor(m => m.StatusReason)</div>
                <div>@Html.TextAreaFor(m => m.StatusReason)</div>
            </div>
            <div class="row">
                <div>@Html.ValidationMessageFor(m => m.StatusReason)</div>
            </div>
            
            <div class="row">
                <div>@Html.DisplayNameFor(m => m.WrittenProposal)</div>
                <div>@Html.CheckBoxFor(m => m.WrittenProposal)</div>
            </div>
            
            <div class="right-text">
                <a href="javascript:void(0);" id="SaveProposalButton" class="button">Save</a>
                <a href="javascript:void(0);" id="CreateProjectByProposalButton" class="button">Make project</a>
            </div>  
        }
    </fieldset>
</div>
