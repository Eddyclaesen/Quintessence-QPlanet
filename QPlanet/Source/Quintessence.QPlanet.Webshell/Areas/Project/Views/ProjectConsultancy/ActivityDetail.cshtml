@using Quintessence.QService.QueryModel.Prm
@model Quintessence.QPlanet.Webshell.Areas.Project.Models.ProjectConsultancy.ActivityDetailActionModel
@{
    Layout = "~/Views/Shared/_DetailLayout.cshtml";
    ViewBag.Title = "Consultancy - Activity detail";
}
@section DetailAreaNavigation
{
    <nav class="area">
        <ul>
            <li class="current"><a href="javascript:void(0);">@Model.Project.Name</a></li>
        </ul>
    </nav>
}
@section DetailActionNavigation
{
    <nav class="action">
        <ul>
            <li>@Html.ActionLink("Detail", "Edit", "ProjectConsultancy", new RouteValueDictionary(new { area = "Project", id = Model.Project.Id }), null)
            </li>
            <li>@Html.ActionLink("Project plan", "EditProjectPlan", "ProjectConsultancy", new RouteValueDictionary(new { area = "Project", id = Model.Project.Id }), null)
            </li>
            <li class="current">Activity details</li>
            <li>@Html.ActionLink("Product details", "ProductDetail", "ProjectConsultancy", new RouteValueDictionary(new { area = "Project", id = Model.Project.Id }), null)
            </li>

            @if (Model.Project.Status != ProjectStatusCodeViewType.Draft && Model.Project.PricingModelType == PricingModelType.TimeAndMaterial)
            {
                <li>@Html.ActionLink("Time sheets", "Timesheet", "ProjectConsultancy", new RouteValueDictionary(new { area = "Project", id = Model.Project.Id }), null)
                </li>
                @*if (Model.IsCurrentUserProjectManager || Model.IsCurrentUserCustomerAssistant)
                {
                <li>@Html.ActionLink("Project time sheets", "ProjectTimesheet", "ProjectConsultancy", new RouteValueDictionary(new { area = "Project", id = Model.Project.Id }), null)
                </li>
                }*@
            }
        </ul>
    </nav>
}
@section LeftNavigation
{
    @if (Model.Activities.Count > 0)
    {
        <ul id="Tabs">
            @foreach (var activity in Model.Activities)
            {
                <li><a href="#@activity.Id" data-controlid="ActivityDetailLink"></a></li>
            }
        </ul>   
    }
}
@section AdditionalScripts
{
    <script src="@Url.Content("~/Scripts/jquery.treeTable.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.cookie.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/persist.js")" type="text/javascript"></script>
    <script>
        $(function() {
            $('fieldset[data-controlid=ActivityDetailFieldset]').each(function() {
                RefreshActivity($(this).attr('data-activityid'));
            });

            InitializeFormButtons();
            InitializeButtons();
            InitializeAddCandidateDialog();
            InitializeDuplicateCandidatesDialog();
        });

        function RefreshActivity(id) {
            $('div[data-activityid=' + id + ']').loading('Retrieving activity');
            $.ajax({
                url: '@Url.Action("EditActivityDetail")/' + id,
                success: function(html) {
                    $('div[data-activityid=' + id + ']').html(html);
                },
                error: function(err) {
                    $('div[data-activityid=' + id + ']').showErrorMessage(err.statusText);
                }
            });
        }

        function InitializeButtons() {
            $(this).on('click', 'a[data-function=AddTrainingCandidateButton]', null, function () {
                $('#AddCandidateDialog').loading('Prepare new candidate...');
                $('#AddCandidateDialog').dialog('open');

                $.ajax({
                    url: '@Url.Action("AddActivityDetailTrainingCandidate")/' + $(this).attr('data-appointment-id'),
                    success: function(html) {
                        $('#AddCandidateDialog').html(html);
                    },
                    error: function (err) {
                        ShowDetailErrorDialog('Prepare new candidate', err);
                    }
                });
            });
        }

        function InitializeFormButtons() {
            $(this).on('click', 'a[data-function=EditActivityDetailTrainingSubmitButton]', null, function() {
                ShowDetailSaveDialog();
                var activityDetailId = $(this).attr('data-activitydetailid');
                var form = $('form[data-form=EditActivityDetailTrainingForm][data-activitydetailid=' + activityDetailId + ']');

                $.ajax({
                    url: '@Url.Action("EditActivityDetailTraining")',
                    type: 'POST',
                    data: form.serialize(),
                    success: function() {
                        RefreshActivity(activityDetailId);
                        HideDetailSaveDialog();
                    },
                    error: function(err) {
                        HideDetailSaveDialog();
                        alert(err.statusText);
                    }
                });
            });

            $(this).on('click', 'a[data-function=EditActivityDetailCoachingSubmitButton]', null, function() {
                ShowDetailSaveDialog();
                var activityDetailId = $(this).attr('data-activitydetailid');
                var form = $('form[data-form=EditActivityDetailCoachingForm][data-activitydetailid=' + activityDetailId + ']');

                $.ajax({
                    url: '@Url.Action("EditActivityDetailCoaching")',
                    type: 'POST',
                    data: form.serialize(),
                    success: function() {
                        RefreshActivity(activityDetailId);
                        HideDetailSaveDialog();
                    },
                    error: function(err) {
                        HideDetailSaveDialog();
                        alert(err.statusText);
                    }
                });
            });

            $(this).on('click', 'a[data-function=EditActivityDetailConsultingSubmitButton]', null, function() {
                ShowDetailSaveDialog();
                var activityDetailId = $(this).attr('data-activitydetailid');
                var form = $('form[data-form=EditActivityDetailConsultingForm][data-activitydetailid=' + activityDetailId + ']');

                $.ajax({
                    url: '@Url.Action("EditActivityDetailConsulting")',
                    type: 'POST',
                    data: form.serialize(),
                    success: function() {
                        RefreshActivity(activityDetailId);
                        HideDetailSaveDialog();
                    },
                    error: function(err) {
                        HideDetailSaveDialog();
                        alert(err.statusText);
                    }
                });
            });

            $(this).on('click', 'a[data-function=EditActivityDetailSupportSubmitButton]', null, function() {
                ShowDetailSaveDialog();
                var activityDetailId = $(this).attr('data-activitydetailid');
                var form = $('form[data-form=EditActivityDetailSupportForm][data-activitydetailid=' + activityDetailId + ']');

                $.ajax({
                    url: '@Url.Action("EditActivityDetailSupport")',
                    type: 'POST',
                    data: form.serialize(),
                    success: function() {
                        RefreshActivity(activityDetailId);
                        HideDetailSaveDialog();
                    },
                    error: function(err) {
                        HideDetailSaveDialog();
                        alert(err.statusText);
                    }
                });
            });

            $(this).on('click', 'a[data-function=EditActivityDetailWorkshopSubmitButton]', null, function() {
                ShowDetailSaveDialog();
                var activityDetailId = $(this).attr('data-activitydetailid');
                var form = $('form[data-form=EditActivityDetailWorkshopForm][data-activitydetailid=' + activityDetailId + ']');

                $.ajax({
                    url: '@Url.Action("EditActivityDetailWorkshop")',
                    type: 'POST',
                    data: form.serialize(),
                    success: function() {
                        RefreshActivity(activityDetailId);
                        HideDetailSaveDialog();
                    },
                    error: function(err) {
                        HideDetailSaveDialog();
                        alert(err.statusText);
                    }
                });
            });

            $(this).on('click', 'a[data-function=EditActivityDetailGenericSubmitButton]', null, function () {
                ShowDetailSaveDialog();
                var activityDetailId = $(this).attr('data-activitydetailid');
                var form = $('form[data-form=EditActivityDetailGenericForm][data-activitydetailid=' + activityDetailId + ']');

                $.ajax({
                    url: '@Url.Action("EditActivityDetailGeneric")',
                    type: 'POST',
                    data: form.serialize(),
                    success: function() {
                        RefreshActivity(activityDetailId);
                        HideDetailSaveDialog();
                    },
                    error: function(err) {
                        HideDetailSaveDialog();
                        alert(err.statusText);
                    }
                });
            });
        }

        //Initialize dialog to add candidates

        function InitializeAddCandidateDialog() {
            $('#AddCandidateDialog').dialog({
                autoOpen: false,
                modal: true,
                resizable: false,
                width: 800,
                height: 600,
                title: 'Add new candidate'
            });
        }

        //Initialize dialog for duplicates candidates

        function InitializeDuplicateCandidatesDialog() {
            $('#DuplicateCandidatesDialog').dialog({
                autoOpen: false,
                modal: true,
                resizable: false,
                width: 800,
                height: 600,
                title: 'Duplicate candidates'
            });
        }
    </script>
}
@if (Model.Activities.Count > 0)
{
    foreach (var activity in Model.Activities)
    {
    <fieldset id="@activity.Id" data-controlid="ActivityDetailFieldset" data-activityid="@activity.Id">
        <legend>@activity.ActivityTypeName - @activity.Name</legend>
        <div data-activityid="@activity.Id"></div>
    </fieldset>
    }
}

<div id="AddCandidateDialog">
    <div id="UnregisteredCandidatesPlaceHolder"></div>
</div>

<div id="DuplicateCandidatesDialog">
    <div id="DuplicateCandidatesPlaceHolder"></div>
</div>
